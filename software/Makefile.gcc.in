# RISC-V GCC Compilers
# riscv64-linux-gnu-gcc - Compiler from system packages (for local dev)
# riscv64-unknown-elf-gcc - From SiFive (on c125m/eda machines)

RISCV_PACKAGE := riscv64-linux-gnu
RISCV_DEFAULT := riscv64-unknown-elf
RISCV_DEFAULT_PRESENT := $(shell command -v $(RISCV_DEFAULT)-gcc 2> /dev/null)

ifdef RISCV_DEFAULT_PRESENT
    RISCV := $(RISCV_DEFAULT)
else
    RISCV := $(RISCV_PACKAGE)
endif

LIB_PATH := ../151_library
LIB_SOURCES := $(wildcard ../151_library/*.c)
LIB_OBJECTS := $(LIB_SOURCES:%.c=%.o)

CSRCS := $(wildcard *.c)
COBJS := $(CSRCS:%.c=%.o)

SSRCS := $(wildcard *.s)
SOBJS := $(SSRCS:%.s=%.o)

LDSRC := $(TARGET).ld

GCC_OPTS := -mabi=ilp32 -march=rv32i -static -mcmodel=medany -nostdlib -nostartfiles -T $(LDSRC)

default: $(TARGET)

LINK_DEPENDENCIES = $(COBJS) $(SOBJS)
ifeq ($(INCLUDE_LIB), true)
	LINK_DEPENDENCIES += $(LIB_OBJECTS)
endif

$(TARGET): $(CSRCS) $(SSRCS)
	$(RISCV)-gcc $(GCC_OPTS) $^ -o $@.elf
	$(RISCV)-strip -R .comment $@.elf
	$(RISCV)-objdump -D -Mnumeric $@.elf > $@.dump
	$(RISCV)-elf2hex --bit-width 32 --input $@.elf > $@.hex

$(LIB_PATH)/%.o: $(LIB_PATH)/%.c
	$(RISCV)-gcc $(GCC_OPTS) $< -o $@

%.o: %.c
	$(RISCV)-gcc $(GCC_OPTS) -c -I$(LIB_PATH) $< -o $@

%.o: %.s
	$(RISCV)-gcc $(GCC_OPTS) $< -o $@

clean:
	rm -f $(COBJS) $(SOBJS) $(LIB_OBJECTS) $(TARGET).{elf,dump,hex}
